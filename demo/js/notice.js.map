{"version":3,"sources":["notice.js"],"names":["$","opt","id","type","data","dataList","callback","read","later","readAll","pager","current","total","initData","dl","push","length","getData","index","prev","showNotice","next","close","cb","instance","addClass","setTimeout","remove","B","newInstance","Date","append","tpl","each","el","that","on","event","preventDefault","action","footer","laterIcon","title","desc","notice","prop","types","forEach","add","newNotice","unshift","refresh","newDl","jQuery"],"mappings":"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","file":"notice.js","sourcesContent":["(function($) {\r\n    // 默认配置\r\n    let opt = {\r\n            id: '',\r\n            // 弹窗样式\r\n            type: 'default',\r\n            data: '',\r\n            dataList: [],\r\n            // 回调函数，用户自定义\r\n            callback: {\r\n                read: function() {},\r\n                later: null,\r\n                readAll: function() {},\r\n            },\r\n            // 分页\r\n            pager: {\r\n                current: 1,\r\n                total: 1\r\n            },\r\n            // 初始化数据\r\n            initData: function(dl) {\r\n                if ($.type(dl) == 'array') {\r\n                    // 如果传入的是数组，则进行分页\r\n                    this.dataList = dl\r\n                } else {\r\n                    this.dataList = []\r\n                    this.dataList.push(dl)\r\n                }\r\n                this.pager.total = this.dataList.length\r\n                this.getData(1)\r\n            },\r\n            // 根据页码获取数据\r\n            getData: function(index) {\r\n                this.data = this.dataList[index - 1]\r\n                this.pager.current = index\r\n            },\r\n            // 上一页\r\n            prev: function() {\r\n                var index = this.pager.current\r\n                if (index > 1) {\r\n                    this.getData(index - 1)\r\n                    showNotice()\r\n                }\r\n            },\r\n            // 下一页\r\n            next: function() {\r\n                var index = this.pager.current\r\n                if (index < this.pager.total) {\r\n                    this.getData(index + 1)\r\n                    showNotice()\r\n                }\r\n            },\r\n            // 关闭弹窗\r\n            close: function(cb) {\r\n                instance.addClass('slideOutRight')\r\n                setTimeout(function() {\r\n                    opt.remove()\r\n                    if (cb) cb()\r\n                }, 500)\r\n            },\r\n            remove: function() {\r\n                instance.remove()\r\n                instance = null\r\n            }\r\n        },\r\n        B = $('body'),\r\n        instance = null\r\n\r\n    // 显示弹窗\r\n    function showNotice() {\r\n        if (instance) {\r\n            // 当前有弹窗的，先移除当前的再显示新的\r\n            opt.remove()\r\n            newInstance()\r\n        } else {\r\n            // 第一次进入，有入场动画\r\n            newInstance()\r\n            instance.addClass('slideInRight')\r\n        }\r\n    }\r\n\r\n    // 实例方法\r\n    function newInstance() {\r\n        // 给唯一id\r\n        opt.id = 'notice' + (-new Date())\r\n\r\n        // 添加到body中\r\n        B.append(tpl(opt.data))\r\n\r\n        // 获取实例\r\n        instance = $('#' + opt.id)\r\n\r\n        // 绑定回调\r\n        $('[data-cb]', instance).each(function(index, el) {\r\n            var that = $(el),\r\n                cb = that.data('cb')\r\n            that.on('click', function(event) {\r\n                // 返回当前数据，总数组，当前索引\r\n                event.preventDefault()\r\n                var index = opt.pager.current - 1\r\n                opt.callback[cb](opt.data, opt.dataList, index)\r\n            })\r\n        })\r\n\r\n        // 绑定事件\r\n        $('[data-action]', instance).each(function(index, el) {\r\n            var that = $(el),\r\n                action = that.data('action')\r\n            that.on('click', function(event) {\r\n                event.preventDefault()\r\n                opt[action]()\r\n            })\r\n        })\r\n    }\r\n\r\n    // 模板方法\r\n    function tpl(data) {\r\n        var footer = ''\r\n        if (opt.pager.total > 1) {\r\n            // 总数大于1时显示分页\r\n            footer = `<div class=\"fs-notice-footer fs-cf\">\r\n                        <div class=\"fs-fl\">\r\n                            <i class=\"iconfont icon-check\" data-cb=\"readAll\">全部标记为已读</i>\r\n                        </div>\r\n                        <div class=\"fs-fr fs-noselect\">\r\n                            <i class=\"iconfont icon-arrow-left\" title=\"上一条\" data-action=\"prev\"></i>\r\n                            ${opt.pager.current}/${opt.pager.total}\r\n                            <i class=\"iconfont icon-arrow-right\" title=\"下一条\" data-action=\"next\"></i>\r\n                        </div>\r\n                    </div>`\r\n        }\r\n        var laterIcon = ''\r\n        if (opt.callback.later) {\r\n            laterIcon = `<i class=\"iconfont icon-time\" title=\"稍后处理\" data-cb=\"later\"></i>`\r\n        }\r\n        return `<div class=\"fs-notice-wrapper fs-notice-${opt.type}\" id=\"${opt.id}\">\r\n                    <div class=\"fs-notice-header\">\r\n                        <div class=\"fs-notice-title\">\r\n                            <span data-cb=\"read\">${data.title}</span>\r\n                        </div>\r\n                        <div class=\"fs-notice-actions\">\r\n                            ${laterIcon}\r\n                            <i class=\"iconfont icon-close\" title=\"关闭\" data-action=\"close\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"fs-notice-body\">\r\n                        <div class=\"fs-notice-custom-body\">${data.desc}</div>\r\n                    </div>\r\n                    ${footer}\r\n                </div>`\r\n    }\r\n\r\n    // 主方法\r\n    $.notice = function(dataList, callback, type) {\r\n        // 同时只能有一个弹窗实例\r\n        if (instance) return\r\n\r\n        // 初始化数据\r\n        opt.initData(dataList)\r\n\r\n        //使用传入的回调方法\r\n        for (var prop in callback) {\r\n            opt.callback[prop] = callback[prop]\r\n        }\r\n        // 主题配色\r\n        opt.type = type ? type : 'default'\r\n\r\n        // 显示弹窗\r\n        showNotice(type)\r\n    }\r\n\r\n    // 关闭方法\r\n    $.notice.close = function() {\r\n        if (!instance) return\r\n        opt.close()\r\n    }\r\n\r\n    // 不同颜色边边\r\n    var types = ['info', 'success', 'warning', 'error']\r\n    types.forEach(function(type) {\r\n        // 可以通过$.notice.info等调用\r\n        $.notice[type] = function(dataList, callback) {\r\n            return $.notice(dataList, callback, type)\r\n        }\r\n    })\r\n\r\n    // 添加提醒数据\r\n    $.notice.add = function(newNotice) {\r\n        opt.dataList.unshift(newNotice)\r\n        $.notice.refresh(opt.dataList)\r\n    }\r\n\r\n    // 刷新提醒数据\r\n    $.notice.refresh = function(newDl) {\r\n        if (newDl.length < 1 || !newDl) {\r\n            $.notice.close()\r\n        } else {\r\n            opt.initData(newDl)\r\n            showNotice()\r\n        }\r\n    }\r\n\r\n}(jQuery))\r\n"]}